#---------------------------------------------------------------#
#--------------ENHANCED OAI INGESTION CONFIG--------------------#
#---------------------------------------------------------------#
#
# the various plugins can specify their options, in the form:
#
# oai.harvester.<plugin>.options = <option name>:<human readable option text>, ....
#
oai.harvester.ingest_filter.option = none:No filtering of incoming items
oai.harvester.ingest_filter.option = cristin:Core Cristin types with full-text only

oai.harvester.metadata_update.option = all:Remove all existing metadata and replace completely
oai.harvester.metadata_update.option = cristin:Update only Cristin authority controlled metadata

oai.harvester.bundle_versioning.option = all:Remove all existing bundles and replace completely
oai.harvester.bundle_versioning.option = cristin:Synchronise bitstreams with Cristin

oai.harvester.ingest_workflow.option = archive:All items go directly to the DSpace archive
oai.harvester.ingest_workflow.option = cristin:All items go through the DSpace Workflow

# if the harvester is called in an asynchronous context (such as
# via the scheduler), use this eperson as the acting user.  This should
# be someone with sufficient rights to carry out the harvesting actions
# (so, probably an administrator)
#
oai.admin.eperson = richard

# If you are using the enhanced OAI-PMH collection harvesting feature, you can enable
# some of these.
#
# plugin.named.org.dspace.harvest.IngestionWorkflow = \
#  no.uio.duo.CristinIngestionWorkflow = cristin
#
#plugin.named.org.dspace.harvest.MetadataRemover = \
#  no.uio.duo.CristinMetadataRemover
#
#plugin.named.org.dspace.harvest.BundleVersioningStrategy = \
#  no.uio.duo.CristinBundleVersioningStrategy